{"componentChunkName":"component---src-templates-post-template-js","path":"/api-doc","result":{"data":{"markdownRemark":{"id":"aa774a22-9968-5f76-8b65-028748772bc7","html":"<p><img src=\"/media/api-doc/pexel-doc.jpg\" alt=\"markdown-format\"></p>\n<p>I have been into Backend development for most of my development experience - be it either Java , Node or NestJS. Documentation is always an important aspect which many developments tend to ignore. While it’s important to implement the API the correct way , it’s also important to document it in a way that can be understood by the consumers of your API.</p>\n<p>I understand that developer find documentation boring and I was one among them several years back :-) .</p>\n<blockquote>\n<p>Documentation is a love letter that you write to your future self. - Damian Conway</p>\n</blockquote>\n<p>For most of my early days and even today, Swagger is one of the ways but it does have a learning curve.\nPostman tool is what I have been using lately for testing my developed REST APIs and in these years, Postman has evolved and have added bunch of features including Documentation.</p>\n<p>Documenting using Postman is very simple and you can just create your collections , add APIs (with name, description) and can quickly publish documentation by right clicking and clicking on publish. For this post, you don’t need to publish. Just follow the below steps:</p>\n<p><strong>1. Export the Postman collection</strong></p>\n<p>Click on the 3 dots (…) against your collection and select ‘Export’. Select the recommended version , directory and submit.</p>\n<p><img src=\"/media/api-doc/export-collection.gif\" alt=\"export-collection\"></p>\n<p><strong>2. Install docgen</strong></p>\n<p>docgen (<a href=\"https://github.com/thedevsaddam/docgen\">https://github.com/thedevsaddam/docgen</a>) is a tool (MIT license) that helps to transform the postman collections into formats like HTML and Markdown.</p>\n<p>On Mac , you can follow the below steps:</p>\n<pre><code class=\"language-bash\">curl https://raw.githubusercontent.com/thedevsaddam/docgen/v3/install.sh -o install.sh \\\n&#x26;&#x26; sudo chmod +x install.sh \\\n&#x26;&#x26; sudo ./install.sh \\\n&#x26;&#x26; rm install.sh\n</code></pre>\n<p>On windows, Download the library from <a href=\"https://github.com/thedevsaddam/docgen/releases\">here</a></p>\n<p><strong>3. Generate HTML and Markdown files from Postman collection exported in step 1</strong></p>\n<p>For HTML: <code>docgen build -i &#x3C;path_to_postman_collection> -o &#x3C;file_name.html></code></p>\n<p>For Markdown: <code>docgen build -i &#x3C;path_to_postman_collection> -o &#x3C;file_name.md> -m</code></p>\n<script src=\"https://asciinema.org/a/414575.js\" id=\"asciicast-414575\" async data-autoplay=\"true\"  width=\"600\" height=\"300\"></script>\n<p><strong>4.Use the generated files</strong></p>\n<p>If you have named the output file as <code>index.html</code> , then you could simply put it in public folder of your API or at a path which is been called from the base route.</p>\n<ul>\n<li>\n<p>HTML Output</p>\n<p><img src=\"/media/api-doc/html-format.png\" alt=\"html-format\"></p>\n</li>\n<li>\n<p>Markdown Output</p>\n<p><img src=\"/media/api-doc/markdown-format.png\" alt=\"markdown-format\"></p>\n</li>\n</ul>\n<p>This is one of the easiest way we could get REST API documentation done. It has some limitation, but its easy to go and you don’t have to do much to get the documentation done.\nJust one thing that’s missing and would be great to have is the ability to specify enviornment details so that one could directly invoke the API as we can in Swagger.</p>\n<p>Let me know your thoughts and other options when it comes to API documentation. Thanks and Happy Learning !!!</p>","fields":{"slug":"/api-doc","tagSlugs":["/tag/restapi","/tag/docgen","/tag/postman"],"categorySlug":"/category/documentation"},"frontmatter":{"date":"2021-05-17T12:00:02.039Z","description":"Generate REST API documentation in HTML and Markdown format from Postman Collection","category":"documentation","tags":["restapi","docgen","postman"],"title":"Document API using docgen"}}},"pageContext":{"slug":"/api-doc","allCategories":[{"fieldValue":"documentation","totalCount":1,"categoryColor":"pink-600"},{"fieldValue":"security","totalCount":1,"categoryColor":"green-600"},{"fieldValue":"technical","totalCount":1,"categoryColor":"indigo-600"}]}},"staticQueryHashes":["2052939023","251939775","401334301"]}